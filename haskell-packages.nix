{ pkgs
, forceDontCheck
, enableProfiling
, enablePhaseMetrics
, enableHaddockHydra
, enableBenchmarks
, enableSplitCheck
, fasterBuild
, enableDebugging
, filter
, requiredOverlay
, customOverlays ? []
, pkgsGenerated
, filterOverrides ? {}
}:

with pkgs.lib;

let

  # This will yield a set of haskell packages, based on the given compiler.
  # if pkgsGenerated is already evaluated, we use it, otherwise we callPackage
  pkgsBase = 
    let attrBool = builtins.isAttrs pkgsGenerated; 
    in if attrBool then pkgsGenerated else (import pkgsGenerated { inherit pkgs; });

  # Overlay logic for *haskell* packages.
  requiredOverlay'    = import requiredOverlay              { inherit pkgs ; };
  benchmarkOverlay    = import ./overlays/benchmark.nix     {
    inherit pkgs;
    filter = if builtins.hasAttr "benchmark" filterOverrides
      then filterOverrides.benchmark else filter;
  };
  profilingOverlay    = import ./overlays/profile.nix       {
    inherit pkgs enableProfiling;
    filter = if builtins.hasAttr "profiling" filterOverrides
      then filterOverrides.profiling else filter;
  };
  debugOverlay        = import ./overlays/debug.nix         { inherit pkgs; };
  fasterBuildOverlay  = import ./overlays/faster-build.nix  {
    inherit pkgs;
    filter = if builtins.hasAttr "fasterBuild" filterOverrides
      then filterOverrides.fasterBuild else filter;
  };
  dontCheckOverlay    = import ./overlays/dont-check.nix    { inherit pkgs; };
  metricOverlay       = import ./overlays/metric.nix        { inherit pkgs; };
  haddockHydraOverlay = import ./overlays/haddock-hydra.nix {
    inherit pkgs;
    filter = if builtins.hasAttr "haddock" filterOverrides
      then filterOverrides.haddock else filter;
  };
  splitCheckOverlay   = import ./overlays/split-check.nix   {
    inherit pkgs;
    filter = if builtins.hasAttr "splitCheck" filterOverrides
      then filterOverrides.splitCheck else filter;
  };

  activeOverlays = [ requiredOverlay' ]
      ++ [profilingOverlay]
      ++ optional enablePhaseMetrics metricOverlay
      ++ optional enableBenchmarks benchmarkOverlay
      ++ optional enableDebugging debugOverlay
      ++ optional forceDontCheck dontCheckOverlay
      ++ optional enableSplitCheck splitCheckOverlay
      ++ optional enableHaddockHydra haddockHydraOverlay
      ++ optional fasterBuild fasterBuildOverlay
      ++ customOverlays;

in
  # Apply all the overlays on top of the base package set generated by stack2nix
  builtins.foldl' (pkgs: overlay: pkgs.extend overlay) pkgsBase activeOverlays
