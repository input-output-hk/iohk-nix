name: 'Setup IOG librararies'
description: 'Installs libsodum, libsecp256k1 and libblst'
inputs:
  ghc-version:
    description: Version of GHC to install
    default: ''

  cabal-version:
    description: Version of cabal to install
    default: ''

outputs:
  prefix:
    description: "Installed Location"
    value: ${{ steps.prefix.outputs.prefix }}

runs:
  using: "composite"
  steps:
    - name: "[darwin] Ensure pkg-config is available"
      if: runner.os == 'macOS'
      shell: bash
      run: brew install pkg-config autoconf automake libtool

    - name: "[windows] Ensure pkg-config is available"
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        ghcup run -- pacman --noconfirm -S `
          mingw-w64-x86_64-pkg-config `
          mingw-w64-x86_64-openssl `
          base-devel `
          autoconf-wrapper `
          autoconf `
          automake `
          libtool `
          make

    - name: Read versions
      id: libs
      shell: bash
      run: echo "libs=$(jq -c . < libs.json)" >> $GITHUB_ENV

    - name: Compute installation location
      id: prefix
      shell: bash
      env:
        PREFIX: ${{ runner.os == 'Windows' && '/mingw64' || '/usr/local' }}
      run: |
        echo "PREFIX=$PREFIX" | tee -a "$GITHUB_ENV"
        echo "prefix=$PREFIX" >> $GITHUB_OUTPUT

    - name: secp256k1 - checkout
      shell: bash
      working-directory: ${{ github.workspace }}
      run: |
        mkdir -p extras/sources/secp256k1
        cd extras/sources/secp256k1
        curl -L ${{ fromJson(env.libs).secp256k1 }} | tar --strip-components=1 -xzf -

    - name: "secp256k1 - build & install"
      shell: ${{ runner.os == 'Windows' && 'C:\\msys64\\usr\\bin\\bash.exe {0}' || 'bash' }}
      working-directory: ${{ github.workspace }}${{ runner.os == 'Windows' && '\extras\sources\secp256k1' || '/extras/sources/secp256k1' }}
      env:
        # Same environment as tmate action
        MSYS2_PATH_TYPE: inherit
        MSYSTEM: MINGW64
        CHERE_INVOKING: 1
        FLAGS: "--prefix=${{ env.PREFIX }}"
        SUDO: ${{ runner.os == 'Windows' && '' || 'sudo -E' }}
        BASH: ${{ runner.os == 'Windows' && 'C:\\msys64\\usr\\bin\\bash.exe' || 'bash -x'}}
      run: $BASH "${{ github.action_path }}/.github/action/build.secp256k1.bash"
